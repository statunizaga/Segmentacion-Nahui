knitr::opts_chunk$set(echo = FALSE,# Prevents code but not the results
message = FALSE,
warning = FALSE)
knitr::opts_knit$set(root.dir = dirname(rstudioapi::getActiveDocumentContext()$path))
# https://towardsdatascience.com/five-r-markdown-tricks-that-you-may-not-know-about-71e93f50c026
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(lares))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(ggtext))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(stringi))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(magrittr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(patchwork))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(formattable))
suppressPackageStartupMessages(library(DataExplorer))
suppressPackageStartupMessages(library(summarytools))
suppressPackageStartupMessages(library(tidylog))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# vts_2021_dni %>% write_rds("01.Data/seg02.rds")
vts_2021_dni <- read_rds("01.Data/seg02.rds")
require(SmartEDA)
vts_2021_dni %>%
select(segmento_nahui,dependiente) %>%
mutate(dependiente = ifelse(dependiente,
'dependiente',
'independiente')) %>%
crosstab(segmento_nahui,dependiente,prow =  T) %>%
select(1,3,4) %>%
rename(segmento_nahui=1) %>%
mutate(segmento_nahui = str_to_title(segmento_nahui)) %>%
mutate(segmento_nahui = fct_reorder(segmento_nahui, total, .desc = FALSE)) %>%
ggplot(aes(y=segmento_nahui))+
geom_segment(aes(
x = dependiente,
xend = total,
y = segmento_nahui,
yend = segmento_nahui),
size = 2,color = "gray89") +
# geom_point(aes(x = dependiente),size=4,color="#4169E1")+
geom_point(aes(x = dependiente),size=4,color="#00CD00")+
# geom_point(aes(x = total),size=4,color="darkorange")+
geom_point(aes(x = total),size=4,color="gray70")+
geom_label_repel(
aes(x = dependiente,label = paste0("n: ", dependiente ) ),
nudge_x = -0.1,direction = "y",size = 2.2,nudge_y = 0.2)+
geom_label_repel(
aes(x = total,label = paste0("n: ", total ) ),
nudge_x = -0.1,direction = "y",size = 2.2,nudge_y = 0.2)+
theme_bw()+
theme(axis.text.y = element_text(size=12))+
labs(x="Pesos(%)",
y=NULL,
# title = "<span style = 'color: red;'>Virginica irises</span> have the largest average sepal width")+
title = "Comparacion de pesos entre la Distribucion <span style = 'color: gray70;'>General</span> vs <span style = 'color: #00CD00;'> Persona Dependiente</span> - 2021")+
theme(plot.title = element_markdown(size = 17),
plot.title.position = "plot")
vts_2021_dni %>%
group_by(segmento_nahui) %>%
summarise(
ingreso_prom = median(ingreso, na.rm = T),
ingreso_cv = sd(ingreso, na.rm = T) / mean(ingreso, na.rm =T)) %>%
arrange(desc(ingreso_prom))
vts_2021_dni %>%
group_by(segmento_nahui) %>%
summarise(
ingreso_prom = median(ingreso, na.rm = T),
ingreso_cv = sd(ingreso, na.rm = T) / mean(ingreso, na.rm = T)) %>%
arrange(desc(ingreso_prom)) %>%
mutate(segmento_nahui = str_to_title(segmento_nahui),
segmento_nahui = fct_reorder(segmento_nahui,
ingreso_prom, .desc = T)
) %>%
mutate(
poder_adquisitivo = case_when(
ingreso_prom > 3500 ~ "Alto (3.5K-4.5K]",
ingreso_prom > 2400 ~ "Mediano (2.4K-3.5K]",
TRUE ~ "Bajo (0-2.4K]"
)
) %>%
mutate(
poder_adquisitivo = fct_relevel(
poder_adquisitivo,
"Alto (3.5K-4.5K]",
"Mediano (2.4K-3.5K]",
"Bajo (0-2.4K]"
)
) %>%
ggplot(aes(x = segmento_nahui,y=ingreso_prom,size=ingreso_prom))+
geom_segment(aes(
x = segmento_nahui,
xend = segmento_nahui,
y = 2000,
yend = ingreso_prom),
size = 2,color = "gray70")+
geom_point(aes(color=poder_adquisitivo))+
scale_color_brewer(palette="Greens",direction = -1)+
# scale_color_manual(values = c("#00CD00","#00EE00","#00FF00"))+
scale_size_continuous(range = c(10,20),
breaks = NULL)+
scale_y_continuous(labels = label_number(prefix = "S/.",
suffix = "K",
scale = 1e-3,
big.mark = ","))+
theme_classic()+
labs(color="Poder Adquisitivo",
x=NULL,size=NULL,y=NULL,
title = "Distribucion de Ingresos por Segmento Ñahui")+
theme(plot.title.position = 'plot',
plot.title = element_text(face = "bold",
size=20),
legend.position = "top",
legend.text = element_text(size=12),
axis.text.x = element_text(size=15))
# Alto, mediano y regular poder adquisitivo
vts_2021_dni$ingreso %>% is.na %>% table %>% prop.table
vts_2021_dni$edad <- vts_2021_dni %$% interval(fh_nacimiento,fecha_facturacion) / duration(num = 1, units = "years") %>% trunc()
vts_2021_dni %>%
ggplot(aes(x=edad,fill=segmento_nahui))+
geom_density(alpha=0.3)
vts_2021_dni %>%
group_by(segmento_nahui) %>%
summarise(edad_prom=median(edad,na.rm = T),
cantidad=n()) %>%
arrange(edad_prom)
vts_2021_dni %>%
group_by(segmento_nahui) %>%
summarise(
missing_ingresos = sum(is.na(ingreso)),
n=n()) %>%
ungroup() %>%
mutate(pct_missing=missing_ingresos/n)
vts_2021_dni %>%
group_by(segmento_nahui) %>%
summarise(
missing_ingresos = sum(is.na(ingreso)),
n=n()) %>%
ungroup() %>%
mutate(pct_missing=percent( missing_ingresos/n))
vts_2021_dni$edad <- vts_2021_dni %$% interval(fh_nacimiento,fecha_facturacion) / duration(num = 1, units = "years") %>% trunc()
vts_2021_dni %>%
ggplot(aes(x=edad,fill=segmento_nahui))+
geom_density(alpha=0.3)
vts_2021_dni %>%
group_by(segmento_nahui) %>%
summarise(edad_prom=median(edad,na.rm = T),
cantidad=n()) %>%
arrange(edad_prom)
vts_2021_dni %>%
crosstab(zona)
vts_2021_dni %>%
filter(departamento=="LIMA") %>%
pull(distrito) %>%
unique %>% iconv(to = "latin1")
"ZU�IGA" %>% iconv(to = "latin16")
vts_2021_dni %>%
group_by(segmento_nahui) %>%
summarise(edad_prom=median(edad,na.rm = T),
cantidad=n()) %>%
arrange(edad_prom)
getwd()
getwd()
